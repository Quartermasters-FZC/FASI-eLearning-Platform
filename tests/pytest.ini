[tool:pytest]
# Pytest Configuration for AI-Powered eLearning Platform
# Quartermasters FZC - Comprehensive Testing Framework

# Test discovery
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirements
minversion = 7.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --cov=backend
    --cov=ai-services
    --cov=frontend/web-app/src
    --cov-report=html:tests/coverage/html
    --cov-report=xml:tests/coverage/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=tests/reports/junit.xml
    --html=tests/reports/report.html
    --self-contained-html
    --import-mode=importlib

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    fast: Fast running tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    security: Security tests
    performance: Performance tests
    ai: AI/ML service tests
    speech: Speech recognition tests
    nlp: Natural language processing tests
    translation: Translation service tests
    auth: Authentication tests
    user: User management tests
    content: Content management tests
    database: Database tests
    api: API tests
    frontend: Frontend tests
    accessibility: Accessibility tests
    multilingual: Multi-language tests
    fsi: FSI compliance tests
    government: Government security tests
    
# Test environment variables
env = 
    TESTING=1
    NODE_ENV=test
    PYTEST_CURRENT_TEST=1
    DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/test_elearning
    REDIS_URL=redis://localhost:6379/1
    MONGODB_URL=mongodb://localhost:27017/test_content
    ELASTICSEARCH_URL=http://localhost:9200
    
# Filterwarnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    
# Test timeouts
timeout = 300
timeout_method = thread

# Parallel execution
-n auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */dist/*
    */build/*
    */__pycache__/*
    */migrations/*
    */static/*
    */media/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod